{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/cmax9/documents/Developer/spaceX/components/RocketLayout/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport RocketCard from \"../RocketCard\";\nimport { Container } from './styles';\nimport getRocketInfo from \"../../services/getRocketInfo\";\nimport Spinner from '../Spinner';\n\nconst RocketLayout = () => {\n  const {\n    0: rocket,\n    1: setRocket\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getRocketInfo().then(data => {\n      setRocket(data);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: rocket.map(item => /*#__PURE__*/_jsxDEV(RocketCard, {\n      name: item.name,\n      info: item.description,\n      image: item.flickr_images[1],\n      status: item.active ? \"active\" : \"disabled\",\n      boosters: item.boosters,\n      company: item.company,\n      country: item.country,\n      costLaunch: item.cost_per_launch,\n      stages: item.stages,\n      succesRate: item.success_rate_pct,\n      engineLoss: item.engines.engine_loss_max,\n      layout: item.engines.layout,\n      number: item.engines.number,\n      type: item.engines.type,\n      version: item.engines.version,\n      propellant1: item.engines.propellant_1,\n      fflight: item.first_flight\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RocketLayout;","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/spaceX/components/RocketLayout/index.js"],"names":["React","useState","useEffect","RocketCard","Container","getRocketInfo","Spinner","RocketLayout","rocket","setRocket","loading","setLoading","then","data","map","item","name","description","flickr_images","active","boosters","company","country","cost_per_launch","stages","success_rate_pct","engines","engine_loss_max","layout","number","type","version","propellant_1","first_flight","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAGzB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAECC,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,aAAa,GACZO,IADD,CACOC,IAAD,IAAS;AACbJ,MAAAA,SAAS,CAACI,IAAD,CAAT;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAMA,GARQ,EAQN,EARM,CAAT;;AAUD,MAAGD,OAAH,EAAW;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,SAAD;AAAA,cACGF,MAAM,CAACM,GAAP,CAAYC,IAAD,iBACV,QAAC,UAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,MAAA,IAAI,EAAED,IAAI,CAACE,WAHb;AAIE,MAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmB,CAAnB,CAJT;AAKE,MAAA,MAAM,EAAEH,IAAI,CAACI,MAAL,GAAc,QAAd,GAAyB,UALnC;AAME,MAAA,QAAQ,EAAEJ,IAAI,CAACK,QANjB;AAOE,MAAA,OAAO,EAAEL,IAAI,CAACM,OAPhB;AAQE,MAAA,OAAO,EAAEN,IAAI,CAACO,OARhB;AASE,MAAA,UAAU,EAAEP,IAAI,CAACQ,eATnB;AAUE,MAAA,MAAM,EAAER,IAAI,CAACS,MAVf;AAWE,MAAA,UAAU,EAAET,IAAI,CAACU,gBAXnB;AAYE,MAAA,UAAU,EAAEV,IAAI,CAACW,OAAL,CAAaC,eAZ3B;AAaE,MAAA,MAAM,EAAEZ,IAAI,CAACW,OAAL,CAAaE,MAbvB;AAcE,MAAA,MAAM,EAAEb,IAAI,CAACW,OAAL,CAAaG,MAdvB;AAeE,MAAA,IAAI,EAAEd,IAAI,CAACW,OAAL,CAAaI,IAfrB;AAgBE,MAAA,OAAO,EAAEf,IAAI,CAACW,OAAL,CAAaK,OAhBxB;AAiBE,MAAA,WAAW,EAAEhB,IAAI,CAACW,OAAL,CAAaM,YAjB5B;AAkBE,MAAA,OAAO,EAAEjB,IAAI,CAACkB;AAlBhB,OACOlB,IAAI,CAACmB,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9CD;;AAgDA,eAAe3B,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RocketCard from \"../RocketCard\";\nimport {Container} from './styles'\nimport getRocketInfo from \"../../services/getRocketInfo\";\nimport Spinner from '../Spinner'\n\nconst RocketLayout = () => {\n\n\n  const [rocket, setRocket] = useState([])\n  const [loading, setLoading] = useState(false)\n\n   useEffect(() => {\n    setLoading(true)\n    getRocketInfo()\n    .then((data) =>{ \n      setRocket(data)\n      setLoading(false)\n    });\n    \n   }, []);\n\n  if(loading){\n    return <Spinner/>\n  }\n\n  return (\n    <Container>\n      {rocket.map((item) => (\n        <RocketCard\n          key={item.id}\n          name={item.name}\n          info={item.description}\n          image={item.flickr_images[1]}\n          status={item.active ? \"active\" : \"disabled\"}\n          boosters={item.boosters}\n          company={item.company}\n          country={item.country}\n          costLaunch={item.cost_per_launch}\n          stages={item.stages}\n          succesRate={item.success_rate_pct}\n          engineLoss={item.engines.engine_loss_max}\n          layout={item.engines.layout}\n          number={item.engines.number}\n          type={item.engines.type}\n          version={item.engines.version}\n          propellant1={item.engines.propellant_1}\n          fflight={item.first_flight}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default RocketLayout;"]},"metadata":{},"sourceType":"module"}