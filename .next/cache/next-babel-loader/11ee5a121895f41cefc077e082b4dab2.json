{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/cmax9/documents/Developer/spaceX/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/cmax9/documents/Developer/spaceX/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default function getAllLaunches(_x) {\n  return _getAllLaunches.apply(this, arguments);\n}\n\nfunction _getAllLaunches() {\n  _getAllLaunches = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n    var API, params, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            API = \"https://api.spacexdata.com/v4/launches/query\", params = {\n              method: 'POST',\n              body: JSON.stringify({\n                \"query\": {\n                  \"$text\": {\n                    \"$search\": \"\"\n                  }\n                },\n                \"options\": {\n                  \"limit\": 10,\n                  \"sort\": {\n                    \"date_utc\": \"desc\"\n                  },\n                  'page': page\n                }\n              }),\n              headers: new Headers({\n                'Content-Type': 'application/json'\n              })\n            };\n            _context.next = 3;\n            return fetch(API, params);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllLaunches.apply(this, arguments);\n}","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/spaceX/services/getPastLaunches.js"],"names":["getAllLaunches","page","API","params","method","body","JSON","stringify","headers","Headers","fetch","response","json","data"],"mappings":";;AAAA,wBAA8BA,cAA9B;AAAA;AAAA;;;6EAAe,iBAA8BC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,GADS,mDAEfC,MAFe,GAEN;AACDC,cAAAA,MAAM,EAAE,MADP;AAEDC,cAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAgB;AACpB,yBAAS;AACE,2BAAS;AACP,+BAAW;AADJ;AADX,iBADW;AAMnB,2BAAU;AACN,2BAAQ,EADF;AAEN,0BAAO;AACL,gCAAW;AADN,mBAFD;AAKN,0BAAON;AALD;AANS,eAAhB,CAFJ;AAgBDO,cAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAa;AAClB,gCAAgB;AADE,eAAb;AAhBR,aAFM;AAAA;AAAA,mBAuBQC,KAAK,CAACR,GAAD,EAAMC,MAAN,CAvBb;;AAAA;AAuBTQ,YAAAA,QAvBS;AAAA;AAAA,mBAwBIA,QAAQ,CAACC,IAAT,EAxBJ;;AAAA;AAwBTC,YAAAA,IAxBS;AAAA,6CAyBNA,IAzBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export default async function getAllLaunches(page) {\nconst API = `https://api.spacexdata.com/v4/launches/query`,\nparams = {\n        method: 'POST', \n        body:JSON.stringify( {\n         \"query\": {\n                    \"$text\": {\n                      \"$search\": \"\"\n                    }\n                  },\n          \"options\":{\n              \"limit\":10,\n              \"sort\":{\n                \"date_utc\":\"desc\"\n              },\n              'page':page\n            }        \n        } ),    \n        headers: new Headers( {\n            'Content-Type': 'application/json'\n        } )\n    };   \n\n  let response = await fetch(API, params);\n  let data = await response.json();\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}