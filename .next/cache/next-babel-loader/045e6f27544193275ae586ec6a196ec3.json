{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/cmax9/documents/Developer/spaceX/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/cmax9/documents/Developer/spaceX/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default function getAllLaunches(_x) {\n  return _getAllLaunches.apply(this, arguments);\n}\n\nfunction _getAllLaunches() {\n  _getAllLaunches = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(keyword) {\n    var API, params, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            API = \"https://api.spacexdata.com/v4/launches/query\", params = {\n              method: \"POST\",\n              body: JSON.stringify({\n                query: {\n                  $text: {\n                    $search: keyword\n                  }\n                },\n                options: {\n                  sort: {\n                    date_utc: \"desc\"\n                  }\n                }\n              }),\n              headers: new Headers({\n                \"Content-Type\": \"application/json\"\n              })\n            };\n            _context.next = 3;\n            return fetch(API, params);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllLaunches.apply(this, arguments);\n}","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/spaceX/services/getFilterLaunches.js"],"names":["getAllLaunches","keyword","API","params","method","body","JSON","stringify","query","$text","$search","options","sort","date_utc","headers","Headers","fetch","response","json","data"],"mappings":";;AAAA,wBAA8BA,cAA9B;AAAA;AAAA;;;6EAAe,iBAA8BC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,GADO,mDAEXC,MAFW,GAEF;AACPC,cAAAA,MAAM,EAAE,MADD;AAEPC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,KAAK,EAAE;AACLC,oBAAAA,OAAO,EAAET;AADJ;AADF,iBADY;AAMnBU,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,QAAQ,EAAE;AADN;AADC;AANU,eAAf,CAFC;AAcPC,cAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,gCAAgB;AADG,eAAZ;AAdF,aAFE;AAAA;AAAA,mBAqBQC,KAAK,CAACd,GAAD,EAAMC,MAAN,CArBb;;AAAA;AAqBTc,YAAAA,QArBS;AAAA;AAAA,mBAsBIA,QAAQ,CAACC,IAAT,EAtBJ;;AAAA;AAsBTC,YAAAA,IAtBS;AAAA,6CAuBNA,IAvBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export default async function getAllLaunches(keyword) {\n  const API = `https://api.spacexdata.com/v4/launches/query`,\n    params = {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: {\n          $text: {\n            $search: keyword,\n          },\n        },\n        options: {\n          sort: {\n            date_utc: \"desc\",\n          },\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n\n  let response = await fetch(API, params);\n  let data = await response.json();\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}