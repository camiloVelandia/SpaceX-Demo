{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/cmax9/documents/Developer/spaceX/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/cmax9/documents/Developer/spaceX/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport Head from \"next/head\";\nimport { ThemeProvider } from \"styled-components\";\nimport GloblalStyles, { Button } from '../globlalStyles';\nimport Header from '../components/Header';\nimport darkModeBtn from '../components/darkModeBtn';\nimport Footer from '../components/Footer';\nvar lightTheme = {\n  body: \"#E2E2E2\",\n  text: \"#363537\",\n  Alpha: \"rgba(255,255,255,.7)\"\n};\nexport var darkTheme = {\n  body: \"#000\",\n  Alpha: \"rgba(0,0,0,.8)\",\n  text: \"#FAFAFA\"\n};\nexport default function App(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(\"light\"),\n      theme = _useState[0],\n      setTheme = _useState[1]; // The function that toggles between themes\n\n\n  var toggleTheme = function toggleTheme() {\n    // if the theme is not light, then set it to dark\n    if (theme === \"light\") {\n      setTheme(\"dark\"); // otherwise, it should be light\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  var router = useRouter();\n\n  if (router.pathname == '/') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"State X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og:title\",\n          content: \"State x\"\n        }, \"title\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme === \"light\" ? lightTheme : darkTheme,\n        children: [/*#__PURE__*/_jsxDEV(GloblalStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleTheme,\n          children: \"Toggle theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme === \"light\" ? lightTheme : darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(GloblalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"State X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          property: \"og:title\",\n          content: \"State x\"\n        }, \"title\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        children: \"Toggle theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"EuK9/yb9TK5RWAP8j9GSMP60ILg=\", false, function () {\n  return [useRouter];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/spaceX/pages/_app.js"],"names":["React","useState","useRouter","Head","ThemeProvider","GloblalStyles","Button","Header","darkModeBtn","Footer","lightTheme","body","text","Alpha","darkTheme","App","Component","pageProps","theme","setTheme","toggleTheme","router","pathname"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {useRouter} from 'next/router'\nimport Head from \"next/head\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport GloblalStyles, {Button} from '../globlalStyles'\n\n\nimport Header from '../components/Header'\nimport darkModeBtn from '../components/darkModeBtn'\nimport Footer from '../components/Footer'\n\n\n\n\nconst lightTheme = {\n  body: \"#E2E2E2\",\n  text: \"#363537\",\n  Alpha: \"rgba(255,255,255,.7)\",\n};\n\nexport const darkTheme = {\n  body: \"#000\",\n  Alpha: \"rgba(0,0,0,.8)\",\n  text: \"#FAFAFA\",\n};\n\n\nexport default function App({ Component, pageProps }) {\n\nconst [theme, setTheme] = useState(\"light\");\n\n// The function that toggles between themes\nconst toggleTheme = () => {\n  // if the theme is not light, then set it to dark\n  if (theme === \"light\") {\n    setTheme(\"dark\");\n    // otherwise, it should be light\n  } else {\n    setTheme(\"light\");\n  }\n};\n\n\n  const router = useRouter()\n  \n  if(router.pathname== '/'){\n    return (\n      <>\n        <Head>\n          <title>State X</title>\n          <meta property=\"og:title\" content=\"State x\" key=\"title\" />\n        </Head>\n        <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n          <GloblalStyles />\n          <Header />\n          <Button onClick={toggleTheme}>Toggle theme</Button>\n          <Component {...pageProps} />\n        </ThemeProvider>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n        <GloblalStyles />\n        <Head>\n          <title>State X</title>\n          <meta property=\"og:title\" content=\"State x\" key=\"title\" />\n        </Head>\n        <Header />\n        <button onClick={toggleTheme}>Toggle theme</button>\n\n        <Component {...pageProps} />\n        <Footer />\n      </ThemeProvider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}