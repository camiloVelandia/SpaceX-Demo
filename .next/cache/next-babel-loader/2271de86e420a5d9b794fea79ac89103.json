{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/cmax9/documents/Developer/spaceX/components/GridStats/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport getPastLaunches from \"../../services/getPastLaunchesNP\";\nimport getPayload from \"../../services/getPayload\";\nimport StatCard from \"../StatCard\";\nimport { Grid } from \"./styles\";\n\nvar GridStats = function GridStats() {\n  _s();\n\n  var dataStarlink = {\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\"],\n    datasets: [{\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\"],\n      borderWidth: 1\n    }]\n  };\n\n  var _useState = useState(''),\n      succes = _useState[0],\n      setsucces = _useState[1];\n\n  var _useState2 = useState(''),\n      fail = _useState2[0],\n      setfail = _useState2[1];\n\n  useEffect(function () {\n    getPastLaunches().then(function (data) {\n      setdragonInfo(data);\n    });\n  }, []);\n  useEffect(function () {\n    var succeslaunch = dragonInfo.filter(function (item) {\n      return !item.success;\n    });\n    var faillaunch = dragonInfo.filter(function (item) {\n      return item.success;\n    });\n    setsucces(succeslaunch.length);\n    setfail(faillaunch.length);\n  }, [dragonInfo]);\n  var dataSucces = {\n    labels: [\"fail\", \"succes\"],\n    datasets: [{\n      label: \"# of Votes\",\n      data: [fail, succes],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(StatCard, {\n      title: \"launch stats\",\n      items: dataSucces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(StatCard, {\n      title: \"commercial Customers\",\n      items: dataStarlink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GridStats, \"Y/2rQIEyIw3fMrpTtqIHfmgFEfM=\");\n\n_c = GridStats;\nexport default GridStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridStats\");","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/spaceX/components/GridStats/index.js"],"names":["React","useState","useEffect","getPastLaunches","getPayload","StatCard","Grid","GridStats","dataStarlink","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","succes","setsucces","fail","setfail","then","setdragonInfo","succeslaunch","dragonInfo","filter","item","success","faillaunch","length","dataSucces"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,SAASC,IAAT,QAAqB,UAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAGtB,MAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,CADW;AAEnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAFR;AAGEC,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,CAHnB;AASEC,MAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,CATf;AAeEC,MAAAA,WAAW,EAAE;AAff,KADQ;AAFS,GAArB;;AAHsB,kBA2BMd,QAAQ,CAAC,EAAD,CA3Bd;AAAA,MA2Bfe,MA3Be;AAAA,MA2BPC,SA3BO;;AAAA,mBA4BEhB,QAAQ,CAAC,EAAD,CA5BV;AAAA,MA4BfiB,IA5Be;AAAA,MA4BTC,OA5BS;;AA+BpBjB,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,eAAe,GAAGiB,IAAlB,CAAuB,UAACR,IAAD,EAAU;AAC/BS,MAAAA,aAAa,CAACT,IAAD,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,YAAI;AACb,QAAMoB,YAAY,GAAGC,UAAU,CAACC,MAAX,CAAkB,UAAAC,IAAI,EAAE;AAC5C,aAAO,CAACA,IAAI,CAACC,OAAb;AACA,KAFoB,CAArB;AAGA,QAAMC,UAAU,GAAGJ,UAAU,CAACC,MAAX,CAAkB,UAAAC,IAAI,EAAE;AAC1C,aAAOA,IAAI,CAACC,OAAZ;AACA,KAFkB,CAAnB;AAGAT,IAAAA,SAAS,CAACK,YAAY,CAACM,MAAd,CAAT;AACAT,IAAAA,OAAO,CAACQ,UAAU,CAACC,MAAZ,CAAP;AACD,GATS,EASR,CAACL,UAAD,CATQ,CAAT;AAYD,MAAMM,UAAU,GAAG;AACjBpB,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT,CADS;AAEjBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,IAAI,EAAE,CAACM,IAAD,EAAMF,MAAN,CAFR;AAGEH,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,CAHnB;AAOEC,MAAAA,WAAW,EAAE,CAAC,uBAAD,EAA0B,uBAA1B,CAPf;AAQEC,MAAAA,WAAW,EAAE;AARf,KADQ;AAFO,GAAnB;AAgBD,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,cAAhB;AAA+B,MAAA,KAAK,EAAEc;AAAtC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,sBAAhB;AAAuC,MAAA,KAAK,EAAErB;AAA9C;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAvED;;GAAMD,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport getPastLaunches from \"../../services/getPastLaunchesNP\";\nimport getPayload from \"../../services/getPayload\";\n\nimport StatCard from \"../StatCard\";\n\nimport { Grid } from \"./styles\";\n\nconst GridStats = () => {\n\n  \n  const dataStarlink = {\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\"],\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: [12, 19, 3, 5],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n\n  const [succes, setsucces] = useState('')\n  const [fail, setfail] = useState('')\n\n\n    useEffect(() => {\n      getPastLaunches().then((data) => {\n        setdragonInfo(data);\n      });\n    }, []);\n\n    useEffect(()=>{\n     const succeslaunch = dragonInfo.filter(item=>{\n      return !item.success \n     })\n     const faillaunch = dragonInfo.filter(item=>{\n      return item.success \n     })\n     setsucces(succeslaunch.length)\n     setfail(faillaunch.length)\n   },[dragonInfo])\n\n\n   const dataSucces = {\n     labels: [\"fail\", \"succes\"],\n     datasets: [\n       {\n         label: \"# of Votes\",\n         data: [fail,succes],\n         backgroundColor: [\n           \"rgba(255, 99, 132, 0.2)\",\n           \"rgba(54, 162, 235, 0.2)\",\n         ],\n         borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\n         borderWidth: 1,\n       },\n     ],\n   };\n\n  return (\n    <Grid>\n      <StatCard title=\"launch stats\" items={dataSucces} />\n      <StatCard title=\"commercial Customers\" items={dataStarlink} />\n    </Grid>\n  );\n};\n\nexport default GridStats;\n\n"]},"metadata":{},"sourceType":"module"}