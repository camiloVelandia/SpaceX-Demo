{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/cmax9/documents/Developer/spaceX/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar API = \"https://api.spacexdata.com/v4/company\";\nexport default function getCompanyInfo() {\n  return fetch(API).then(function (res) {\n    return res.json();\n  }).then(function (response) {\n    console.log(response);\n\n    var info = _objectSpread({}, response);\n\n    console.log(info);\n    return info;\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/spaceX/services/getCompanyInfo.js"],"names":["API","getCompanyInfo","fetch","then","res","json","response","console","log","info"],"mappings":";;;;;;AAAA,IAAMA,GAAG,GAAG,uCAAZ;AAEA,eAAe,SAASC,cAAT,GAAyB;AACtC,SAAOC,KAAK,CAACF,GAAD,CAAL,CACJG,IADI,CACC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADJ,EAEJF,IAFI,CAEC,UAAAG,QAAQ,EAAE;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAMG,IAAI,qBAAOH,QAAP,CAAV;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,WAAOA,IAAP;AACD,GAPI,CAAP;AAQD","sourcesContent":["const API = \"https://api.spacexdata.com/v4/company\";\n\nexport default function getCompanyInfo(){\n  return fetch(API)\n    .then(res => res.json())\n    .then(response=>{\n      console.log(response)\n      const info = {...response}\n      console.log(info)\n      return info\n    })\n}"]},"metadata":{},"sourceType":"module"}